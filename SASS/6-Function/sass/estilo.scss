@import 'prueba';

// VARIABLES
$base_font-size: 16px;
// ******************
* { margin: 0; padding: 0; }

@mixin set-w-h($s1: 500, $s2: 200) {
	width: #{$s1}px; height: #{$s2}px;
}

@function toem($target, $context: $base_font-size) {
   	@if $target == 0 { @return 0 }
	@if (unitless($target)) {
		$target: $target * 1px;
	}

	@if (unitless($context)) {
		$context: $context * 1px;
	}

	@return $target / $context * 1em;
   // Note: We need the "* 1em" there for Sass to correctly append the unit value. You can also use "+ 0em" for the same purpose.
}

body {
	font-size: $base_font-size;
	h1 { 
		color: white; font-weight: bold;  text-align: center; 
		text-shadow: 1px 1px 1px #505050; 
		font-size: 25px; text-decoration: underline; background: #717171; padding: 25px;
	}

	.block { 
		background: black; width: 50px; height: 50px; margin: 10px; 
		@include set-w-h;
		p { color: white; }
		&.one { 
			/*font-size: 32px;*/
			.box {
				@include set-w-h (50, 50);
				background: grey;
				width: toem(100px);
				// Mostrar lo que ocurre si no se pasa el font-size
				// width: toem(100px, 32px);
			}
		}
		&.two { 
			.box {
				@include set-w-h (50, 50);
				background: grey;
				width: toem(100px);
			}
		}
	}
}

//*************    SECCIÓN  Ejemplos    ****************

	// * Las funciones deben encontrarse definidas antes que las clases donde se utilizan.
	// * Mostrar que los parámetros pueden predeterminarse con un valor. 
	// * Aclarar que al ser una función debe retornar algo. 
	// * Mostrar lo que ocurre si no se pasa el font-size
	// * Descomentar @import 'prueba';
	// * Explicar la importancia de trabajar en 'em'

//************************************************************************************